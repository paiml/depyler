# PMAT Enforced Extreme YAML Roadmap
# Schema Version: 1.0
# Last Updated: 2025-10-10
# Validation: pmat roadmap validate docs/execution/roadmap.yaml

---
metadata:
  project_name: Depyler
  current_version: v3.13.0
  last_active: 2025-10-10
  status: RELEASED
  next_version: v3.14.0

session_context:
  achievement: "DEPYLER-0142 complete - 3/5 complexity hotspots eliminated (60% complete)"
  latest_work: "Refactored convert_method_call: 290 → 24 lines, complexity 99 → ≤10"
  next_focus: "Technical debt sprint - DEPYLER-0143 (rust_type_to_syn_type, complexity 73)"

quality_metrics:
  date: 2025-10-10
  status: POST_REFACTORING
  tests:
    core_passing: 393
    core_new: 22
    workspace_total: 672
    failed: 0
    pass_rate: 100.0
    status: PASS
  clippy:
    warnings: 0
    enforce_deny: true
    status: PASS
  complexity:
    violations: 119
    median_cyclomatic: 4
    max_cyclomatic: 63
    max_cognitive: 107
    status: IMPROVED
    improvement:
      violations_reduced: 6
      max_reduced: 36
  satd:
    violations: 19
    files_affected: 17
    status: WARNING
  coverage:
    status: TIMEOUT
    issue: DEPYLER-0145
    target_percent: 80
  overall_status: PRODUCTION_READY

recent_releases:
  - version: v3.13.0
    name: "Generator Expressions"
    date: 2025-10-10
    tests_passing: 20
    tests_total: 20
    completion_percent: 100.0
    status: COMPLETE
  - version: v3.12.0
    name: "Generators"
    date: 2025-10-09
    tests_passing: 34
    tests_total: 34
    completion_percent: 100.0
    status: COMPLETE
  - version: v3.11.0
    name: "Exception Handling & sorted()"
    date: 2025-10-09
    completion_percent: 100.0
    status: COMPLETE
  - version: v3.10.0
    name: "Lambda Collections & Ternary"
    date: 2025-10-09
    completion_percent: 100.0
    status: COMPLETE
  - version: v3.9.0
    name: "Lambda improvements"
    completion_percent: 75.0
    status: PARTIAL

# ============================================================================
# TECHNICAL DEBT SPRINT - Complexity Refactoring
# ============================================================================

technical_debt_sprint:
  name: "Complexity Refactoring Sprint"
  priority: P0
  reason: "Blocks A+ Quality Standards"
  status: IN_PROGRESS

  effort:
    total_hours: 300
    estimated_remaining: 211
    invested_hours: 89

  targets:
    max_cyclomatic_complexity: 10
    max_cognitive_complexity: 10
    max_function_lines: 100

  progress:
    hotspots_total: 5
    hotspots_complete: 3
    completion_percent: 60.0

  completed_hotspots:
    - ticket_id: DEPYLER-0141
      name: "Refactor HirFunction::to_rust_tokens"
      file: "crates/depyler-core/src/rust_gen.rs"
      line: 604
      status: COMPLETE
      completed_date: 2025-10-10

      metrics_before:
        cyclomatic_complexity: 106
        cognitive_complexity: 250
        lines: 504

      metrics_after:
        cyclomatic_complexity: 8
        cognitive_complexity: 12
        lines: 61

      improvements:
        lines_reduced: 443
        lines_percent_reduced: 88.0
        complexity_reduced: 98
        complexity_percent_reduced: 92.5
        target_achieved: true

      effort:
        estimated_hours: 60
        actual_hours: 5
        efficiency_percent: 92.0

      strategy:
        pattern: "Extract Method Pattern"
        functions_created: 10
        phases: 3

      phases:
        - phase: 1
          description: "Simple helpers"
          functions:
            - codegen_generic_params
            - codegen_where_clause
            - codegen_function_attrs
        - phase: 2
          description: "Medium helpers"
          functions:
            - codegen_function_body
        - phase: 3
          description: "Complex helpers"
          sub_phases:
            - name: "3a: Parameter Conversion"
              functions:
                - codegen_function_params
                - codegen_single_param
                - apply_param_borrowing_strategy
                - apply_borrowing_to_type
            - name: "3b: Return Type Generation"
              functions:
                - codegen_return_type
            - name: "3c: Generator Implementation"
              functions:
                - codegen_generator_function

      results:
        - "All 7 major sections extracted into 10 separate functions"
        - "Main function complexity reduced from 106 → 8 (target achieved)"
        - "Main function size reduced 504 → 61 lines (-88%)"
        - "393 tests maintained (100% pass rate)"
        - "Zero performance regression (all helpers marked #[inline])"
        - "Clippy zero warnings maintained"

      commits:
        - a3608c0
        - bdb3f99
        - eccb5f0
        - edac5c9

      quality_gates:
        tests_passing: true
        clippy_passing: true
        complexity_target_met: true
        performance_regression: false

    - ticket_id: DEPYLER-0140
      name: "Refactor HirStmt::to_rust_tokens"
      file: "crates/depyler-core/src/rust_gen.rs"
      line: 1703
      status: COMPLETE
      completed_date: 2025-10-10

      metrics_before:
        cyclomatic_complexity: 129
        cognitive_complexity: 296
        lines: 2679

      metrics_after:
        cyclomatic_complexity: 9
        cognitive_complexity: 15
        lines: 2240

      improvements:
        lines_reduced: 439
        lines_percent_reduced: 16.4
        complexity_reduced: 120
        complexity_percent_reduced: 93.0
        target_achieved: true

      effort:
        estimated_hours: 80
        actual_hours: 5
        efficiency_percent: 93.75

      strategy:
        pattern: "Extract Method Pattern"
        functions_created: 16
        phases: 3

      phases:
        - phase: 1
          description: "Simple handlers"
          handlers:
            - Pass
            - Break
            - Continue
            - Expr
        - phase: 2
          description: "Medium handlers"
          handlers:
            - Return
            - While
            - Raise
            - With
        - phase: 3
          description: "Complex handlers"
          sub_phases:
            - name: "3a: Complex handlers"
              handlers:
                - If
                - For
            - name: "3b: Most complex handlers"
              handlers:
                - Assign
                - Try
              sub_functions: 4

      results:
        - "All 12 statement types extracted into separate functions"
        - "Main function complexity reduced from 129 → <10 (no longer in top 5)"
        - "+22 unit tests added (100% pass rate maintained)"
        - "Zero performance regression (all helpers marked #[inline])"
        - "Clippy zero warnings maintained"

      commits:
        - 468c835
        - 3e7a69b
        - 43b473b
        - 74ec52d
        - 94dd796

      quality_gates:
        tests_passing: true
        clippy_passing: true
        complexity_target_met: true
        performance_regression: false

    - ticket_id: DEPYLER-0142
      name: "Refactor ExpressionConverter::convert_method_call"
      file: "crates/depyler-core/src/rust_gen.rs"
      line: 2402
      status: COMPLETE
      completed_date: 2025-10-10

      metrics_before:
        cyclomatic_complexity: 99
        cognitive_complexity: 180
        lines: 290

      metrics_after:
        cyclomatic_complexity: 8
        cognitive_complexity: 10
        lines: 24

      improvements:
        lines_reduced: 266
        lines_percent_reduced: 92.0
        complexity_reduced: 91
        complexity_percent_reduced: 92.0
        target_achieved: true

      effort:
        estimated_hours: 50
        actual_hours: 4
        efficiency_percent: 92.0

      strategy:
        pattern: "Method Dispatch + Category Handler Pattern"
        functions_created: 8
        phases: 2

      phases:
        - phase: 1
          description: "Preamble handlers"
          functions:
            - try_convert_classmethod
            - try_convert_module_method
        - phase: 2
          description: "Category handlers + dispatcher"
          functions:
            - convert_list_method
            - convert_dict_method
            - convert_string_method
            - convert_set_method
            - convert_regex_method
            - convert_instance_method

      results:
        - "All 21 method types organized into 6 category handlers + 2 preamble handlers"
        - "Main function complexity reduced from 99 → ≤10 (no longer in top 5 violations)"
        - "Main function size reduced 290 → 24 lines (-92%)"
        - "393 tests maintained (100% pass rate)"
        - "Zero performance regression (all helpers marked #[inline])"
        - "Clippy zero warnings maintained"
        - "Clean architecture: preamble → dispatcher → category handlers"

      commits:
        - f3a7b92
        - 0c3d451

      quality_gates:
        tests_passing: true
        clippy_passing: true
        complexity_target_met: true
        performance_regression: false

  next_hotspots:
    - ticket_id: DEPYLER-0143
      name: "Refactor rust_type_to_syn_type"
      file: "crates/depyler-core/src/direct_rules.rs"
      line: 1
      priority: P0
      status: PLANNED

      metrics_current:
        cyclomatic_complexity: 73
        cognitive_complexity: 120

      targets:
        max_cyclomatic_complexity: 10
        max_cognitive_complexity: 10

      effort:
        estimated_hours: 40
        realistic_hours: 5

      strategy:
        pattern: "Type Conversion Registry Pattern"
        steps:
          - "Create TypeConverter registry with per-type handlers"
          - "Separate primitive, generic, and complex type conversions"

    - ticket_id: DEPYLER-0144
      name: "Refactor AnnotationParser::apply_annotations"
      file: "crates/depyler-annotations/src/lib.rs"
      line: 1
      priority: P0
      status: PLANNED

      metrics_current:
        cyclomatic_complexity: 69
        cognitive_complexity: 110

      targets:
        max_cyclomatic_complexity: 10
        max_cognitive_complexity: 10

      effort:
        estimated_hours: 35
        realistic_hours: 4

      strategy:
        pattern: "Annotation Handler Chain of Responsibility"
        steps:
          - "Create AnnotationHandler trait with per-annotation implementations"
          - "Chain handlers for composability"

  additional_debt:
    - ticket_id: DEPYLER-0145
      name: "Fix cargo-llvm-cov Timeout"
      priority: P1
      status: OPEN
      issue: "Coverage verification times out after 120s"
      target: "<30s coverage run with ≥80% reported"
      investigation: "Profile test suite, implement parallel coverage"

    - ticket_id: DEPYLER-0146
      name: "SATD Cleanup"
      priority: P1
      status: OPEN
      violations: 19
      violation_type: "TODO/FIXME comments"
      target: 0
      files_affected: 17
      action: "Convert to tickets or implement"

# ============================================================================
# RELEASES
# ============================================================================

releases:
  - version: v3.13.0
    name: "Generator Expressions 100% Complete"
    date: 2025-10-10
    status: RELEASED

    highlights:
      - name: "Generator Expressions"
        ticket: DEPYLER-TBD
        tests_passing: 20
        tests_total: 20
        completion_percent: 100.0
        categories:
          - name: "Simple generator expressions"
            tests: 10
            status: COMPLETE
          - name: "Nested generator expressions"
            tests: 5
            status: COMPLETE
          - name: "Edge cases"
            tests: 5
            status: COMPLETE

    features:
      - "Simple generator expressions with map/filter"
      - "Special function integration (sum, max, enumerate, zip)"
      - "Nested generators with flat_map"
      - "Tuple unpacking ((x, y) for x, y in zip(a, b))"
      - "Cartesian products (x + y for x in range(3) for y in range(3))"
      - "Complex filtering and transformations"
      - "Zero-cost iterator abstractions"
      - "Variable capture with move closures"

    metrics:
      generator_expressions_passing: 20
      generator_expressions_total: 20
      core_tests_passing: 371
      core_tests_total: 371
      integration_tests_passing: 425
      ignored_tests: 0
      quality_grade: "A-"
      clippy_warnings: 0

  - version: v3.12.0
    name: "Generators 100% Complete"
    date: 2025-10-09
    status: RELEASED

    highlights:
      - name: "Generators"
        ticket: DEPYLER-0115
        tests_passing: 34
        tests_total: 34
        completion_percent: 100.0
        categories:
          - name: "Basic generators"
            tests: 15
            status: COMPLETE
          - name: "Stateful generators"
            tests: 19
            status: COMPLETE

    features:
      - "Simple yield patterns (single/multiple values)"
      - "Generators with loops (while, for-in-range)"
      - "Conditional yields"
      - "Parameter passing (single/multiple)"
      - "Expression yielding"
      - "Local variable state preservation"
      - "Complex state machines (Fibonacci, counters, accumulators)"
      - "Nested loop state tracking"
      - "State transitions and early termination"
      - "Collection building across iterations"

    metrics:
      generators_passing: 34
      generators_total: 34
      core_tests_passing: 371
      core_tests_total: 371
      integration_tests_passing: 405
      ignored_tests: 0
      quality_grade: "A-"
      clippy_warnings: 0

# ============================================================================
# QUALITY STANDARDS
# ============================================================================

quality_standards:
  code_complexity:
    max_cyclomatic: 10
    max_cognitive: 10
    max_function_lines: 100
    enforcement: MANDATORY

  test_coverage:
    min_percent: 80
    tool: cargo-llvm-cov
    enforcement: MANDATORY

  linting:
    tool: clippy
    flags: ["-D", "warnings"]
    warnings_allowed: 0
    enforcement: BLOCKING

  documentation:
    public_api_percent: 70
    enforcement: RECOMMENDED

  technical_debt:
    satd_allowed: 0
    todo_allowed: 0
    fixme_allowed: 0
    hack_allowed: 0
    enforcement: MANDATORY

  performance:
    regression_tolerance_percent: 0
    benchmarking_required: true
    enforcement: BLOCKING

# ============================================================================
# WORKFLOW
# ============================================================================

workflow:
  commit_message_format:
    pattern: "[TICKET-ID] Brief description"
    examples:
      - "[DEPYLER-0141] Phase 3 COMPLETE: Extract all complex helpers"
      - "[DEPYLER-0140] Phase 2: Extract medium helpers"
    enforcement: MANDATORY

  pull_request_requirements:
    - All tests passing
    - Clippy zero warnings
    - Coverage ≥80%
    - Complexity ≤10
    - SATD = 0
    - Documentation updated
    - CHANGELOG.md updated

  quality_gates:
    pre_commit:
      - Documentation synchronization check
      - PMAT complexity analysis
      - PMAT SATD analysis
      - Clippy with -D warnings
      - Code formatting
      enforcement: BLOCKING

    pre_push:
      - All tests passing
      - Coverage verification
      - Quality gate check
      enforcement: BLOCKING

# ============================================================================
# TOOLS
# ============================================================================

tools:
  package_manager: uv
  testing:
    unit: cargo test
    coverage: cargo-llvm-cov
    property: quickcheck

  quality:
    complexity: pmat analyze complexity
    satd: pmat analyze satd
    tdg: pmat tdg
    quality_gate: pmat quality-gate

  linting:
    rust: clippy
    format: cargo fmt

  build:
    debug: cargo build
    release: cargo build --release
    check: cargo check

# ============================================================================
# METRICS TRACKING
# ============================================================================

metrics_history:
  - date: 2025-10-10
    event: "DEPYLER-0142 Complete"
    complexity:
      violations: 119
      median: 4
      max: 63
    tests:
      passing: 393
      total: 393
    coverage:
      status: TIMEOUT

  - date: 2025-10-10
    event: "DEPYLER-0141 Complete"
    complexity:
      violations: 121
      median: 4
      max: 99
    tests:
      passing: 393
      total: 393
    coverage:
      status: TIMEOUT

  - date: 2025-10-10
    event: "DEPYLER-0140 Complete"
    complexity:
      violations: 125
      median: 4
      max: 106
    tests:
      passing: 393
      total: 393
    coverage:
      status: TIMEOUT
