[workspace]
members = [
    "crates/depyler-core",
    "crates/depyler-analyzer",
    "crates/depyler-verify", 
    "crates/depyler-mcp",
    "crates/depyler-annotations",
    "crates/depyler-quality",
    "crates/depyler",
    "crates/depyler-wasm",
    "crates/depyler-ruchy", "python-to-rust-conversion-examples/examples/02_control_flow/column_b",
]
resolver = "2"

[workspace.metadata.quality]
max_tdg_score = 2.0
min_coverage = 85.0
max_cyclomatic_complexity = 15
required_documentation_coverage = 100.0

[workspace.package]
version = "3.19.26"
edition = "2021"
authors = ["Depyler Contributors"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/paiml/depyler"
homepage = "https://github.com/paiml/depyler"
documentation = "https://docs.rs/depyler"
description = "A Python-to-Rust transpiler focusing on energy-efficient, safe code generation with progressive verification"
keywords = ["python", "rust", "transpiler", "compiler", "verification"]
categories = ["compilers", "development-tools", "parser-implementations"]
readme = "README.md"
rust-version = "1.83"

[workspace.dependencies]
# Core dependencies
anyhow = "1.0"
thiserror = "1.0"
# Pin serde to version compatible with swc_common (used by pmat)
serde = { version = ">=1.0.200, <1.0.220", features = ["derive"] }
serde_json = "1.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Python parsing
rustpython-parser = "0.4"
rustpython-ast = "0.4"

# Code generation
syn = { version = "2.0", features = ["full", "extra-traits", "visit-mut"] }
quote = "1.0"
proc-macro2 = "1.0"

# Analysis
petgraph = "0.6"
indexmap = "2.0"
smallvec = { version = "1.0", features = ["serde"] }
regex = "1.10"

# Testing and verification
quickcheck = "1.0"
quickcheck_macros = "1.0"
proptest = "1.0"
insta = "1.0"
tempfile = "3.14"
rand = "0.8"
md5 = "0.7"

# Hash functions
fnv = "1.0.3"  # FNV hash for HashMap optimization

# CLI
clap = { version = "4.0", features = ["derive", "cargo"] }
indicatif = "0.17"
colored = "2.0"
dialoguer = "0.11"

# Async (for MCP)
tokio = { version = "1.0", features = ["full"] }
tokio-util = "0.7"
reqwest = { version = "0.11", default-features = false, features = ["json", "rustls-tls"] }

# MCP SDK
pmcp = { version = "1.6.0", features = ["validation", "websocket", "http"] }
pmat = { version = "2.3.0", features = ["rust-ast", "syn"] }
async-trait = "0.1"
url = "2.5"

# Security Note: slab v0.4.10 vulnerability (RUSTSEC-2025-0047, CVE-2025-55159)
# - Transitive dependency from pmcp/futures-util
# - Vulnerability in get_disjoint_mut() function (likely not used by us)
# - Cannot upgrade without breaking swc_common compatibility
# - Waiting for upstream pmcp/pmat to update dependencies
# - Risk: LOW (function not in our code paths)

# Benchmarking
criterion = { version = "0.5", features = ["html_reports"] }
pprof = { version = "0.13", features = ["criterion", "flamegraph"] }

# WASM dependencies
wasm-bindgen = "0.2.100"
serde-wasm-bindgen = "0.6"
js-sys = "0.3"
web-sys = "0.3"
web-time = "1.1"  # Replaces unmaintained `instant` crate
toml = "0.8"

[profile.release]
opt-level = 3
lto = "fat"
codegen-units = 1
strip = true
panic = "abort"

# Size-optimized build for distribution
[profile.min-size]
inherits = "release"
opt-level = "z"           # Optimize for size
lto = "fat"               # Full link-time optimization
codegen-units = 1         # Single codegen unit
panic = "abort"           # Remove panic unwinding
strip = true              # Strip all symbols

# Fast development builds
[profile.dev-fast]
inherits = "dev"
opt-level = 1
incremental = true
codegen-units = 16

[profile.dev]
opt-level = 0
debug = true
incremental = true

[profile.bench]
inherits = "release"
debug = true              # Keep debug info for profiling
strip = false            # Keep symbols for flamegraphs

# WASM production build profile
[profile.wasm-production]
inherits = "release"
opt-level = "z"          # Size optimization
lto = "fat"              # Cross-crate inlining
codegen-units = 1        # Single compilation unit
strip = true             # Remove debug symbols
panic = "abort"          # No unwinding
incremental = false      # Deterministic builds

# Optimize dependencies in all profiles
[profile.release.package."*"]
opt-level = 3

[profile.min-size.package."*"]
opt-level = "z"

[profile.dev-fast.package."*"]
opt-level = 1
